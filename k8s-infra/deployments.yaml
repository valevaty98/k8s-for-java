apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: user-service
  replicas: 2
  template:
    metadata:
      labels:
        app: user-service
    spec:
      volumes:
        - name: user-service-volume
          persistentVolumeClaim:
            claimName: user-pvc
      containers:
        - name: user-service
          image: epamuladzislauvaliavaty/user-service:v1.0
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: actuator/health
              port: 8080
            failureThreshold: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            successThreshold: 2
            periodSeconds: 5
            failureThreshold: 1
          volumeMounts:
            - mountPath: "/opt/app/users-data"
              name: user-service-volume
          env:
            - name: DB_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: user-service-cm
                  key: DB_DOMAIN
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-service-cm
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-cm
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-db-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-db-secret
                  key: DB_PASSWORD
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service-deployment
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: post-service
  replicas: 2
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: post-service
    spec:
      containers:
        - name: post-service
          image: epamuladzislauvaliavaty/post-service:v2.0
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: actuator/health
              port: 8080
            failureThreshold: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: actuator/health
              port: 8080
            successThreshold: 2
            periodSeconds: 5
            failureThreshold: 1
          env:
            - name: DB_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: post-service-cm
                  key: DB_DOMAIN
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: post-service-cm
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-service-cm
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: post-db-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: post-db-secret
                  key: DB_PASSWORD
            - name: USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: post-service-cm
                  key: USER_SERVICE_URL
